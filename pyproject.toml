[tool.poetry]
name = "taskipy"
description = "tasks runner for python projects"
version = "1.8.1"
authors = ["Roy Sommer <roy@sommer.co.il>"]
readme = "README.md"
repository = "https://github.com/illBeRoy/taskipy"
license = "MIT"
keywords = ["tasks", "task runner", "development"]
classifiers = [
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Topic :: Software Development :: Build Tools"
]
packages = [
    { include = "taskipy" }
]

[tool.poetry.scripts]
task = 'taskipy.cli:main'

[tool.poetry.dependencies]
python = "^3.6"
toml = "^0.10.0"
psutil = "^5.7.2"
mslex = { version = "^0.3.0", markers = "sys_platform == 'win32'" }
colorama = "^0.4.4"

[tool.poetry.dev-dependencies]
pylint = "^2.4.4"
mypy = "^0.812"
rope = "^0.14.0"
psutil = "^5.6.7"

[tool.taskipy.tasks]
test = { cmd = "python -m unittest -v tests/test_*.py", help = "runs all tests" }
post_test = "./task lint"

test_windows = { cmd = "python -m unittest -v tests\\test_windows.py", help = "this is a command that is run by our Windows CI on Github" }

lint = { cmd = "./task lint_pylint && ./task lint_mypy", help = "lint project with pylint for style and mypy for typings" }
lint_pylint = "pylint tests taskipy"
lint_mypy = "mypy tests taskipy"

publish = { cmd = "poetry publish --build", help = "publishes taskipy to PyPI as is. do not use directly" }
post_publish = "./task make_release_commit"

make_release_commit = { cmd = "python ./.hooks/make_release_commit.py", help = "creates a tagged commit for the release. do not use directly" }

pre_publish_patch = "./task test"
publish_patch = { cmd = "poetry version patch && ./task publish", help = "publishes a patch version, that has only fixes but no new features (x.x.PATCH)" }

pre_publish_minor = "./task test"
publish_minor = { cmd = "poetry version minor && ./task publish", help = "publishes a minor version, which has new fetures (x.MINOR.x)" }

[build-system]
requires = ["poetry>=0.12"]
build-backend = "poetry.masonry.api"
