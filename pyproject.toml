[tool.poetry]
name = "taskipy"
description = "tasks runner for python projects"
version = "1.12.0"
authors = ["Roy Sommer <roy@sommer.co.il>"]
readme = "README.md"
repository = "https://github.com/taskipy/taskipy"
license = "MIT"
keywords = ["tasks", "task runner", "development"]
classifiers = [
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Topic :: Software Development :: Build Tools"
]
packages = [
    { include = "taskipy" }
]

[tool.poetry.scripts]
task = 'taskipy.cli:main'

[tool.poetry.dependencies]
python = "^3.8"
tomli = "^2.0.1"
psutil = "^5.9.5"
mslex = { version = "^1.1.0", markers = "sys_platform == 'win32'" }
colorama = "^0.4.6"

[tool.poetry.group.test.dependencies]
parameterized = "^0.9.0"
pytest = "^7.4.0"
pytest-cov = "^4.1.0"
pytest-sugar = "^0.9.7"

[tool.poetry.group.lint.dependencies]
mypy = "^1.5.0"
black = "^23.7.0"
isort = "^5.12.0"
flake8 = { version = "^6", python = "^3.8.1" }
flake8-pyproject = "^1.2.3"
autoflake = "^2.2.0"

[tool.taskipy.tasks]
lint_format = """
black {module_dir} {tests_dir} \
&& isort {module_dir} {tests_dir} \
&& autoflake --recursive --in-place --remove-all-unused-imports \
    --remove-unused-variables {module_dir} {tests_dir}
"""
lint_analyze = "flake8 {module_dir} {tests_dir}"
lint_types = "mypy {module_dir} {tests_dir}"

publish = { cmd = "poetry publish --build", help = "publishes taskipy to PyPI as is. do not use directly" }
post_publish = "./task make_release_commit"

make_release_commit = { cmd = "python ./.hooks/make_release_commit.py", help = "creates a tagged commit for the release. do not use directly" }

pre_publish_patch = "./task test"
publish_patch = { cmd = "poetry version patch && ./task publish", help = "publishes a patch version, that has only fixes but no new features (x.x.PATCH)" }

pre_publish_minor = "./task test"
publish_minor = { cmd = "poetry version minor && ./task publish", help = "publishes a minor version, which has new fetures (x.MINOR.x)" }

[tool.taskipy.tasks.test]
cmd = "pytest"
help = "runs all tests"

[tool.taskipy.tasks.test_windows]
cmd = "pytest tests\\test_windows.py"
help = "this is run by our Windows CI on Github as a windows sanity check"

[tool.taskipy.tasks.lint]
cmd = """
task lint_format \
&& task lint_analyze \
&& task lint_types
"""
help = "lint project with black, isort, flake8, and mypy."

[tool.taskipy.settings]
use_vars = true

[tool.taskipy.variables]
module_dir = "taskipy"
tests_dir  = "tests"

[tool.isort]
profile = "black"

[tool.flake8]
max-line-length = 88

[tool.pytest.ini_options]
testpaths = ["tests"]

[build-system]
requires      = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
